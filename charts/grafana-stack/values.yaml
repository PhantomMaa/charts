prometheus:
  enabled: true
  
  configmapReload:
    prometheus:
      enabled: false

  server:
    nodeSelector: {}

    persistentVolume:
      size: 8Gi

    resources: 
      limits:
        cpu: 1000m
        memory: 1024Mi
      requests:
        cpu: 500m
        memory: 512Mi

    service:
      servicePort: 9090

  alertmanager:
    enabled: true

  kube-state-metrics:
    enabled: true

  prometheus-node-exporter:
    enabled: true

  prometheus-pushgateway:
    enabled: true

grafana:
  enabled: true
  replicas: 1
  assertNoLeakedSecrets: false
  fullnameOverride: grafana-stack-grafana

  image:
    repository: grafana/grafana-oss

  service:
    port: 3000

  resources:
    limits:
      cpu: 1000m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi

  adminUser: admin
  adminPassword: admin

  grafana.ini:
    database: 
      type: mysql
      host: mysql.ns.svc
      name: grafana
      user: root
      password: root
      url: mysql://root:root@mysql.ns.svc:3306/grafana
      log_queries: true
      ssl_mode: false
    server:
      root_url: https://grafana.example.com
    auth.generic_oauth:
      enabled: true
      name: Keycloak-OAuth
      allow_sign_up: true
      scopes: openid email profile offline_access roles
      use_refresh_token: true
      auth_url: https://auth.example.com/realms/master/protocol/openid-connect/auth
      token_url: https://auth.example.com/realms/master/protocol/openid-connect/token
      api_url: https://auth.example.com/realms/master/protocol/openid-connect/userinfo
      client_id: client-grafana
      client_secret: xxx

  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Prometheus
          type: prometheus
          url: http://grafana-stack-prometheus-server:9090
          access: proxy
          isDefault: true
        - name: Loki
          type: loki
          url: http://grafana-stack-loki:3100

loki:
  enabled: true
  fullnameOverride: grafana-stack-loki
  loki:
    auth_enabled: false
    commonConfig:
      replication_factor: 1
    useTestSchema: true
    pattern_ingester:
        enabled: true
    limits_config:
      allow_structured_metadata: true
      volume_enabled: true
      retention_period: 168h
    compactor:
      retention_enabled: true 
      delete_request_store: s3
    ruler:
      enable_api: true
    storage:
      bucketNames:
        chunks: loki-chunks
        ruler: loki-ruler
        admin: loki-admin
      type: s3
      s3:
        endpoint: minio.ns.svc:9000
        accessKeyId: AK
        secretAccessKey: SK
        insecure: true
        s3ForcePathStyle: true

  deploymentMode: SingleBinary

  memberlist:
    service:
      # This is required for the memberlist to work correctly in SingleBinary mode
      publishNotReadyAddresses: true

  singleBinary:
    replicas: 1

  # Zero out replica counts of other deployment modes
  backend:
    replicas: 0
  read:
    replicas: 0
  write:
    replicas: 0
  ingester:
    replicas: 0
  querier:
    replicas: 0
  queryFrontend:
    replicas: 0
  queryScheduler:
    replicas: 0
  distributor:
    replicas: 0
  compactor:
    replicas: 0
  indexGateway:
    replicas: 0
  bloomCompactor:
    replicas: 0
  bloomGateway:
    replicas: 0

tempo:
  enabled: false

grafanaAgentOperator:
  enabled: false